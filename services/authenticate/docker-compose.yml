version: "3"

services:
  # server:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports: 
  #     - "3000:3000"
  #   # expose: ["3000"]
  #   volumes:
  #     - .:/usr/src/app
  #     - registry:/root/.cargo/registry
  #   depends_on:
  #     - redis
  #     - mongo_db
  #     - nats
  #   # links:
  #   #   - mongo_db
  #   env_file: .env
  #   command: bash -c "bash cargo-watch -x run"

  redis:
      image: redis:latest
      ports:
        - "6379:6379"
      expose:
        - "6379"
      volumes:
        - .docker/redis:/data
  #     restart: unless-stopped
  #     deploy:
  #       replicas: 1
  #     # configs:
  #     #   - my_config
  #     #   - my_other_config

  mongo_db:
    image: mongo:latest
    ports: 
      - "27017:27017"
    volumes:
      #- .docker/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - .docker/mongodb/data/db/:/data/db/
      - .docker/mongodb/data/log/:/var/log/mongodb/
      - .docker/mongodb/config:/data/configdb
    environment:
      - MONGO_INITDB_DATABASE=stated-rust
    restart: unless-stopped

  nats:
    image: nats:latest
    ports:
      - "4222:4222"
      - "6222:6222"
      - "8222:8222"
    hostname: nats-server

  nats-streaming:
    command:
      - "--cluster"
      - "nats://0.0.0.0:6222"
      - "--cluster_id"
      - nats-streaming
      - "--clustered"
      - "--cluster_bootstrap"
      - "--cluster_log_path"
      - /data/log
      - "--cluster_node_id"
      - nats-streaming
      - "--cluster_raft_logging"
      - "--debug"
      - "--dir"
      - /data/msg
      - "--http_port"
      - "8222"
      - "--port"
      - "4222"
      - "--store"
      - file
      - "--stan_debug"
      - "--hb_interval"
      - 2s
      - "--hb_fail_count"
      - "1"
      - "--hb_timeout"
      - 5s
    image: nats-streaming:latest
    ports:
      - "24222:4222"
      - "28222:8222"
    volumes:
      - "./nats-streaming-2:/data"
    # networks: ["nats"]
  # nats-1:
  #   image: nats:latest
  #   command: "--cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222"
  #   # networks: ["nats"]
  #   depends_on: ["nats"]
  # nats-2:
  #   image: nats:latest
  #   command: "--cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222"
  #   # networks: ["nats"]
  #   depends_on: ["nats"]

  # rabbitmq: 
  #   image: rabbitmq:management-alpine
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   volumes:
  #     # - .docker/rabbitmq/etc/:/etc/rabbitmq/
  #     - .docker/rabbitmq/data/:/var/lib/rabbitmq/
  #     - .docker/rabbitmq/logs/:/var/log/rabbitmq/
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=test
  #     - RABBITMQ_DEFAULT_PASS=test
# configs:
#   my_config:
#     file: ./my_config.txt
#   my_other_config:
#     external: true

networks:
  nats:

#   default:
#     driver: bridge

# cargo will try to redownload packages @ docker-compose up so store them here.
volumes:
  # mongodb:
  registry:
    driver: local